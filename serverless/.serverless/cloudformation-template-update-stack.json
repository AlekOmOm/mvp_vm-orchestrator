{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "VmsApiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/vm-orchestrator-api-dev-vmsApi"
      }
    },
    "CommandsApiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/vm-orchestrator-api-dev-commandsApi"
      }
    },
    "JobCacheApiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/vm-orchestrator-api-dev-jobCacheApi"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "vm-orchestrator-api",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/vm-orchestrator-api-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/vm-orchestrator-api-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-vms",
                    "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-vms/index/*",
                    "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-commands",
                    "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-commands/index/*",
                    "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-job-cache",
                    "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-job-cache/index/*"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "vm-orchestrator-api",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "VmsApiLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-50642b44-984c",
          "S3Key": "serverless/vm-orchestrator-api/dev/1753555983734-2025-07-26T18:53:03.734Z/vm-orchestrator-api.zip"
        },
        "Handler": "handlers/vms.api",
        "Runtime": "nodejs20.x",
        "FunctionName": "vm-orchestrator-api-dev-vmsApi",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "VMS_TABLE": "vm-orchestrator-vms",
            "COMMANDS_TABLE": "vm-orchestrator-commands",
            "JOB_CACHE_TABLE": "vm-orchestrator-job-cache"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "VmsApiLogGroup"
      ]
    },
    "CommandsApiLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-50642b44-984c",
          "S3Key": "serverless/vm-orchestrator-api/dev/1753555983734-2025-07-26T18:53:03.734Z/vm-orchestrator-api.zip"
        },
        "Handler": "handlers/commands.api",
        "Runtime": "nodejs20.x",
        "FunctionName": "vm-orchestrator-api-dev-commandsApi",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "VMS_TABLE": "vm-orchestrator-vms",
            "COMMANDS_TABLE": "vm-orchestrator-commands",
            "JOB_CACHE_TABLE": "vm-orchestrator-job-cache"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CommandsApiLogGroup"
      ]
    },
    "JobCacheApiLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-50642b44-984c",
          "S3Key": "serverless/vm-orchestrator-api/dev/1753555983734-2025-07-26T18:53:03.734Z/vm-orchestrator-api.zip"
        },
        "Handler": "handlers/job-cache.api",
        "Runtime": "nodejs20.x",
        "FunctionName": "vm-orchestrator-api-dev-jobCacheApi",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "VMS_TABLE": "vm-orchestrator-vms",
            "COMMANDS_TABLE": "vm-orchestrator-commands",
            "JOB_CACHE_TABLE": "vm-orchestrator-job-cache"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "JobCacheApiLogGroup"
      ]
    },
    "VmsApiLambdaVersion2wCPFLwnU1BSAzW7BOuwiNrxKbzTJSfKW3GxnsiQs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "VmsApiLambdaFunction"
        },
        "CodeSha256": "C7IL//uFglbADAN7PqrEN4FqAUE1QZ+L5owjQL4Dz8I="
      }
    },
    "CommandsApiLambdaVersionopeMEv5ce5brnXJOxThjWqqzxOgyKu5YzayL6enY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CommandsApiLambdaFunction"
        },
        "CodeSha256": "C7IL//uFglbADAN7PqrEN4FqAUE1QZ+L5owjQL4Dz8I="
      }
    },
    "JobCacheApiLambdaVersionoADcNkFA0ZCBohedVJWUiica9IoTbnayqZUTPt8M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "JobCacheApiLambdaFunction"
        },
        "CodeSha256": "C7IL//uFglbADAN7PqrEN4FqAUE1QZ+L5owjQL4Dz8I="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-vm-orchestrator-api",
        "ProtocolType": "HTTP",
        "CorsConfiguration": {
          "AllowHeaders": [
            "Content-Type",
            "Authorization"
          ],
          "AllowMethods": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
          ],
          "AllowOrigins": [
            "*"
          ]
        }
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "VmsApiLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "VmsApiLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationVmsApi": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "VmsApiLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetApiVms": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /api/vms",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationVmsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationVmsApi"
    },
    "HttpApiRoutePostApiVms": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /api/vms",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationVmsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationVmsApi"
    },
    "HttpApiRouteGetApiVmsIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /api/vms/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationVmsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationVmsApi"
    },
    "HttpApiRoutePutApiVmsIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /api/vms/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationVmsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationVmsApi"
    },
    "HttpApiRouteDeleteApiVmsIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "DELETE /api/vms/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationVmsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationVmsApi"
    },
    "CommandsApiLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CommandsApiLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCommandsApi": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CommandsApiLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetApiVmsVmidVarCommands": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /api/vms/{vmId}/commands",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCommandsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCommandsApi"
    },
    "HttpApiRoutePostApiVmsVmidVarCommands": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /api/vms/{vmId}/commands",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCommandsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCommandsApi"
    },
    "HttpApiRouteGetApiCommandsIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /api/commands/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCommandsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCommandsApi"
    },
    "HttpApiRoutePutApiCommandsIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /api/commands/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCommandsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCommandsApi"
    },
    "HttpApiRouteDeleteApiCommandsIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "DELETE /api/commands/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCommandsApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCommandsApi"
    },
    "JobCacheApiLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "JobCacheApiLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationJobCacheApi": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "JobCacheApiLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetApiVmsVmidVarJobs": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /api/vms/{vmId}/jobs",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationJobCacheApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationJobCacheApi"
    },
    "HttpApiRoutePutApiJobsJobidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /api/jobs/{jobId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationJobCacheApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationJobCacheApi"
    },
    "HttpApiRouteDeleteApiJobsJobidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "DELETE /api/jobs/{jobId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationJobCacheApi"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationJobCacheApi"
    },
    "VmsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "vm-orchestrator-vms",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "name",
            "AttributeType": "S"
          },
          {
            "AttributeName": "environment",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "NameEnvironmentIndex",
            "KeySchema": [
              {
                "AttributeName": "name",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "environment",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "CommandsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "vm-orchestrator-commands",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "vmId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "name",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "VmIdIndex",
            "KeySchema": [
              {
                "AttributeName": "vmId",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          },
          {
            "IndexName": "VmIdNameIndex",
            "KeySchema": [
              {
                "AttributeName": "vmId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "name",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "JobCacheTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "vm-orchestrator-job-cache",
        "AttributeDefinitions": [
          {
            "AttributeName": "vmId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "jobId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "status",
            "AttributeType": "S"
          },
          {
            "AttributeName": "createdAt",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "vmId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "jobId",
            "KeyType": "RANGE"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "StatusIndex",
            "KeySchema": [
              {
                "AttributeName": "status",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "createdAt",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "TimeToLiveSpecification": {
          "AttributeName": "ttl",
          "Enabled": true
        },
        "BillingMode": "PAY_PER_REQUEST"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-us-east-1-50642b44-984c",
      "Export": {
        "Name": "sls-vm-orchestrator-api-dev-ServerlessDeploymentBucketName"
      }
    },
    "VmsApiLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "VmsApiLambdaVersion2wCPFLwnU1BSAzW7BOuwiNrxKbzTJSfKW3GxnsiQs"
      },
      "Export": {
        "Name": "sls-vm-orchestrator-api-dev-VmsApiLambdaFunctionQualifiedArn"
      }
    },
    "CommandsApiLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CommandsApiLambdaVersionopeMEv5ce5brnXJOxThjWqqzxOgyKu5YzayL6enY"
      },
      "Export": {
        "Name": "sls-vm-orchestrator-api-dev-CommandsApiLambdaFunctionQualifiedArn"
      }
    },
    "JobCacheApiLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "JobCacheApiLambdaVersionoADcNkFA0ZCBohedVJWUiica9IoTbnayqZUTPt8M"
      },
      "Export": {
        "Name": "sls-vm-orchestrator-api-dev-JobCacheApiLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-vm-orchestrator-api-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-vm-orchestrator-api-dev-HttpApiUrl"
      }
    }
  }
}