{
  "/Users/alek/code/work/vm/vm-orchestrator/mvp_vm-orchestrator/serverless/serverless.yml": {
    "versionFramework": "4.17.2",
    "servicePath": "/Users/alek/code/work/vm/vm-orchestrator/mvp_vm-orchestrator/serverless/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "caesari",
      "app": "vm-orchestrator",
      "service": "vm-orchestrator-api",
      "plugins": [
        "serverless-dotenv-plugin"
      ],
      "custom": {
        "dotenv": {
          "exclude": [
            "AWS_ACCESS_KEY_ID",
            "AWS_SECRET_ACCESS_KEY"
          ]
        }
      },
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "httpApi": {
          "cors": {
            "allowedOrigins": [
              "*"
            ],
            "allowedHeaders": [
              "Content-Type",
              "Authorization"
            ],
            "allowedMethods": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ]
          }
        },
        "region": "us-east-1",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:Scan",
                  "dynamodb:Query",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem",
                  "dynamodb:GetItem"
                ],
                "Resource": [
                  "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-vms",
                  "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-vms/index/*",
                  "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-commands",
                  "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-commands/index/*"
                ]
              }
            ]
          }
        },
        "environment": {
          "VMS_TABLE": "vm-orchestrator-vms",
          "COMMANDS_TABLE": "vm-orchestrator-commands"
        },
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": {
        "vmsApi": {
          "handler": "handlers/vms.api",
          "events": [
            {
              "httpApi": {
                "path": "/api/vms",
                "method": "GET"
              }
            },
            {
              "httpApi": {
                "path": "/api/vms",
                "method": "POST"
              }
            },
            {
              "httpApi": {
                "path": "/api/vms/{id}",
                "method": "GET"
              }
            },
            {
              "httpApi": {
                "path": "/api/vms/{id}",
                "method": "PUT"
              }
            },
            {
              "httpApi": {
                "path": "/api/vms/{id}",
                "method": "DELETE"
              }
            }
          ]
        },
        "commandsApi": {
          "handler": "handlers/commands.api",
          "events": [
            {
              "httpApi": {
                "path": "/api/vms/{vmId}/commands",
                "method": "GET"
              }
            },
            {
              "httpApi": {
                "path": "/api/vms/{vmId}/commands",
                "method": "POST"
              }
            },
            {
              "httpApi": {
                "path": "/api/commands/{id}",
                "method": "GET"
              }
            },
            {
              "httpApi": {
                "path": "/api/commands/{id}",
                "method": "PUT"
              }
            },
            {
              "httpApi": {
                "path": "/api/commands/{id}",
                "method": "DELETE"
              }
            }
          ]
        }
      },
      "resources": {
        "Resources": {
          "VmsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "vm-orchestrator-vms",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "name",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "environment",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "NameEnvironmentIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "name",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "environment",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "CommandsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "vm-orchestrator-commands",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "vmId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "name",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "VmIdIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "vmId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                },
                {
                  "IndexName": "VmIdNameIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "vmId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "name",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "*"
          ],
          "allowedHeaders": [
            "Content-Type",
            "Authorization"
          ],
          "allowedMethods": [
            "GET",
            "POST",
            "PUT",
            "DELETE"
          ]
        }
      },
      "region": "us-east-1",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem"
              ],
              "Resource": [
                "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-vms",
                "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-vms/index/*",
                "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-commands",
                "arn:aws:dynamodb:us-east-1:526531833437:table/vm-orchestrator-commands/index/*"
              ]
            }
          ]
        }
      },
      "environment": {
        "VMS_TABLE": "vm-orchestrator-vms",
        "COMMANDS_TABLE": "vm-orchestrator-commands"
      },
      "stage": "dev",
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": true,
        "monitoring": true
      },
      "orgObservabilityIntegrations": [
        {
          "integrationId": "byW3bxoF3KdSvKvYgNztnK",
          "awsAccountId": "526531833437",
          "status": "alive"
        }
      ],
      "serviceAppId": "WjTcSxMNdQt5bHSBys",
      "serviceProvider": {
        "accessKeyId": "<REDACTED>",
        "secretAccessKey": "<REDACTED>",
        "sessionToken": "<REDACTED>",
        "$source": {
          "CREDENTIALS_CODE": "<REDACTED>"
        }
      },
      "instanceParameters": null
    },
    "error": {
      "message": "Serverless plugin \"serverless-dotenv-plugin\" not found. Make sure it's installed and listed in the \"plugins\" section of your serverless config file. Use the --debug flag to learn more.",
      "stack": "ServerlessError2: Serverless plugin \"serverless-dotenv-plugin\" not found. Make sure it's installed and listed in the \"plugins\" section of your serverless config file. Use the --debug flag to learn more.\n    at PluginManager.resolveServicePlugins (file:///Users/alek/.serverless/releases/4.17.2/package/dist/sf-core.js:1355:3214)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PluginManager.loadAllPlugins (file:///Users/alek/.serverless/releases/4.17.2/package/dist/sf-core.js:1355:1592)\n    at async Serverless.init (file:///Users/alek/.serverless/releases/4.17.2/package/dist/sf-core.js:1362:9843)\n    at async runFramework (file:///Users/alek/.serverless/releases/4.17.2/package/dist/sf-core.js:1389:839)\n    at async TraditionalRunner.run (file:///Users/alek/.serverless/releases/4.17.2/package/dist/sf-core.js:1385:28331)\n    at async route (file:///Users/alek/.serverless/releases/4.17.2/package/dist/sf-core.js:1560:2878)\n    at async Object.run (file:///Users/alek/.serverless/releases/4.17.2/package/dist/sf-core.js:1561:3661)\n    at async run2 (file:///Users/alek/.serverless/releases/4.17.2/package/dist/sf-core.js:1561:4815)",
      "code": "PLUGIN_NOT_FOUND"
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: caesari\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: vm-orchestrator\nservice: vm-orchestrator-api\n\nplugins:\n  - serverless-dotenv-plugin\n\ncustom:\n  dotenv:\n    exclude:\n      - AWS_ACCESS_KEY_ID\n      - AWS_SECRET_ACCESS_KEY\n\nprovider:\n  name: aws\n  runtime: nodejs20.x\n  httpApi:\n    cors:\n      allowedOrigins:\n        - \"*\"\n      allowedHeaders:\n        - Content-Type\n        - Authorization\n      allowedMethods:\n        - GET\n        - POST\n        - PUT\n        - DELETE\n\n  region: \"us-east-1\"\n  iam:\n    role:\n      statements:\n        - Effect: \"Allow\"\n          Action:\n            - \"dynamodb:Scan\"\n            - \"dynamodb:Query\"\n            - \"dynamodb:PutItem\"\n            - \"dynamodb:UpdateItem\"\n            - \"dynamodb:DeleteItem\"\n            - \"dynamodb:GetItem\"\n          Resource:\n            - \"arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.VMS_TABLE}\"\n            - \"arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.VMS_TABLE}/index/*\"\n            - \"arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.COMMANDS_TABLE}\"\n            - \"arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.COMMANDS_TABLE}/index/*\"\n  environment:\n    VMS_TABLE: ${env:AWS_DYNAMODB_VMS_TABLE, \"vm-orchestrator-vms\"}\n    COMMANDS_TABLE: ${env:AWS_DYNAMODB_COMMANDS_TABLE, \"vm-orchestrator-commands\"}\n\nfunctions:\n  # VM Management API\n  vmsApi:\n    handler: handlers/vms.api\n    events:\n      - httpApi:\n          path: /api/vms\n          method: GET\n      - httpApi:\n          path: /api/vms\n          method: POST\n      - httpApi:\n          path: /api/vms/{id}\n          method: GET\n      - httpApi:\n          path: /api/vms/{id}\n          method: PUT\n      - httpApi:\n          path: /api/vms/{id}\n          method: DELETE\n\n  # Commands Management API\n  commandsApi:\n    handler: handlers/commands.api\n    events:\n      - httpApi:\n          path: /api/vms/{vmId}/commands\n          method: GET\n      - httpApi:\n          path: /api/vms/{vmId}/commands\n          method: POST\n      - httpApi:\n          path: /api/commands/{id}\n          method: GET\n      - httpApi:\n          path: /api/commands/{id}\n          method: PUT\n      - httpApi:\n          path: /api/commands/{id}\n          method: DELETE\n\nresources:\n  Resources:\n    # VMs Table\n    VmsTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: ${self:provider.environment.VMS_TABLE}\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n          - AttributeName: name\n            AttributeType: S\n          - AttributeName: environment\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        GlobalSecondaryIndexes:\n          - IndexName: NameEnvironmentIndex\n            KeySchema:\n              - AttributeName: name\n                KeyType: HASH\n              - AttributeName: environment\n                KeyType: RANGE\n            Projection:\n              ProjectionType: ALL\n        BillingMode: PAY_PER_REQUEST\n\n    # Commands Table\n    CommandsTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: ${self:provider.environment.COMMANDS_TABLE}\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n          - AttributeName: vmId\n            AttributeType: S\n          - AttributeName: name\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        GlobalSecondaryIndexes:\n          - IndexName: VmIdIndex\n            KeySchema:\n              - AttributeName: vmId\n                KeyType: HASH\n            Projection:\n              ProjectionType: ALL\n          - IndexName: VmIdNameIndex\n            KeySchema:\n              - AttributeName: vmId\n                KeyType: HASH\n              - AttributeName: name\n                KeyType: RANGE\n            Projection:\n              ProjectionType: ALL\n        BillingMode: PAY_PER_REQUEST\n",
    "command": [],
    "options": {
      "help": true
    },
    "orgId": "678f4501-73b8-4db1-be01-feb3249005ff",
    "orgName": "caesari",
    "userId": "HFgKZkFmg9P5PWZZJV",
    "userName": "caesari",
    "serviceProviderAwsAccountId": "526531833437",
    "serviceProviderAwsCfStackName": "vm-orchestrator-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:526531833437:stack/vm-orchestrator-api-dev/c6111970-6a51-11f0-8b9e-0affe6f14a15",
    "serviceProviderAwsCfStackCreated": "2025-07-26T18:53:09.764Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CommandsApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:526531833437:function:vm-orchestrator-api-dev-commandsApi:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-vm-orchestrator-api-dev-CommandsApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "JobCacheApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:526531833437:function:vm-orchestrator-api-dev-jobCacheApi:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-vm-orchestrator-api-dev-JobCacheApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "VmsApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:526531833437:function:vm-orchestrator-api-dev-vmsApi:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-vm-orchestrator-api-dev-VmsApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "ohb6y8uk2f",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-vm-orchestrator-api-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-50642b44-984c",
        "ExportName": "sls-vm-orchestrator-api-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://ohb6y8uk2f.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-vm-orchestrator-api-dev-HttpApiUrl"
      }
    ]
  }
}